Mind Map generated by NB MindMap plugin   
> __version__=`1.1`,showJumps=`true`
---

# MVN\-GOLANG<br/>2\.3\.3

## dependency aware
> fillColor=`#B8EABC`,topicLinkUID=`1693D4AFAAFA`


### scanDependencies
> fillColor=`#FF9090`


#### Find artifacts generated by Mvn\-Golang among scope dependencies,<br/>unpack them and add unpacked folders into GOPATH during execution
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### true
> fillColor=`#F3F676`


### includeTestDependencies
> fillColor=`#FF9090`


#### Include test dependencies into scanning process\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### true
> fillColor=`#F3F676`


### dependencyTempFolder
> fillColor=`#FF9090`


#### Path to the folder where resolved mvn\-golang dependencies<br/>will be temporary unpacked
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### $\{project\.build\.directory\}/\.\_\_deps\_\_
> fillColor=`#F3F676`


### syncSessionIfModules
> fillColor=`#FF9090`


#### turn on session synchronization<br/>to prevent parallel processing of modules in module mode
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### true
> fillColor=`#F3F676`


## package aware
> fillColor=`#B8EABC`,topicLinkUID=`1693D4A9E73A`


### packages
> fillColor=`#FF9090`


#### List of packages\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### \<packages\><br/>       \<package\>com/some/package\</package\><br/>       \<package\>com/some/packagetwo\</package\><br/>\</packages\>
> align=`left`


## common
> fillColor=`#B8EABC`


### arch
> fillColor=`#FF9090`


#### Architecture of host system\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### \<arch\>windows\</arch\>

### addToGoPath
> fillColor=`#FF9090`


#### Extra folders to be added into GOPATH
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### \<addToGoPath\>                         <br/>    \<fldr\>$\{basedir\}/src2\</fldr\><br/>    \<fldr\>$\{basedir\}/src3\</fldr\><br/>\</addToGoPath\>                        

### buildFlags
> fillColor=`#FF9090`


#### List of build flags for a Go tool\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


### checkSdkHash
> fillColor=`#FF9090`


#### Check hash for downloaded GoSDK archive\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### true
> fillColor=`#F3F676`


###### \<checkSdkHash\>false\</checkSdkHash\>

### connectionTimeout
> fillColor=`#FF9090`


#### Timeout for network connections<br/>during GoSDK loading\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### milliseconds

###### 60000
> fillColor=`#F3F676`


####### \<connectionTimeout\>120000\</connectionTimeout\>

### disableSSLcheck
> fillColor=`#FF9090`


#### Disable check of SSL certificate during HTTPS request\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### properties

###### mvn\.golang\.disable\.ssl\.check

##### false
> fillColor=`#F3F676`


###### \<disableSSLcheck\>true\</disableSSLcheck\>

### disableSdkLoad
> fillColor=`#FF9090`


#### Allows to not load GoSDK if it is not in cache\.<br/>Also it is active if maven session in offline mode\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### false
> fillColor=`#F3F676`


###### \<disableSdkLoad\>true\</disableSdkLoad\>

### env
> fillColor=`#FF9090`


#### Allows define environment variables\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### \<env\><br/>  \<GO111MODULE\>off\</GO111MODULE\><br/>\</env\>
> align=`left`


### errLogFile
> fillColor=`#FF9090`


#### File to save console error log\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### \<errLogFile\>\</errLogFile\>

### exec
> fillColor=`#FF9090`


#### Go tool to be executed\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### go
> fillColor=`#F3F676`


###### \<exec\>cgo\</exec\>

### enforceGoPathToEnd
> fillColor=`#FF9090`


#### Make GOPATH value as the last one in new generated GOPATH chain\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### false
> fillColor=`#F3F676`


###### \<enforceGoPathToEnd\>true\</enforceGoPaathToEnd\>

### execSubpath
> fillColor=`#FF9090`


#### Sub\-path to executing go tool in SDK folder\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### bin
> fillColor=`#F3F676`


###### \<execSubpath\>bin/sub\</execSubpath\>

### echo
> fillColor=`#FF9090`


#### Messages to be printed as INFO into log\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### \<echo\><br/>  \<echo\>Hello world\</echo\><br/>\</echo\>
> align=`left`


### echoWarn
> fillColor=`#FF9090`


#### Messages to be printed as WARNING into log\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### \<echoWarn\><br/>    \<echo\>Hello world\</echo\><br/>\</echoWarn\>
> align=`left`


### filterEnvPath
> fillColor=`#FF9090`


#### Flag shows that environment PATH variable should be<br/>filtered for footsteps of other go/bin folders to prevent conflicts\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### true
> fillColor=`#F3F676`


###### \<filterEnvPath\>false\</filterEnvPath\>

### goPath
> fillColor=`#FF9090`


#### Folder to be used as $GOPATH\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### defines

###### $GOPATH

##### $\{user\.home\}/\.mvnGoLang/\.go\_path
> fillColor=`#F3F676`


###### \<goPath\>$\{user\.home\}/gopath\</goPath\>

### goVersion
> fillColor=`#FF9090`


#### Go SDK version\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### mvn\.golang\.go\.version

##### 1\.12\.7
> fillColor=`#F3F676`


###### \<goVersion\>1\.11\.5\</goVersion\>

### goBin
> fillColor=`#FF9090`


#### Folder to be used as $GOBIN\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### defines

###### $GOBIN

##### $\{project\.build\.directory\}
> fillColor=`#F3F676`


###### \<goBin\>$\{basedir\}/bin\</goBin\>

### goRoot
> fillColor=`#FF9090`


#### GoSDK home folder\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


### goCache
> fillColor=`#FF9090`


#### Cache directory to keep build data\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### defines

###### $GOCACHE

##### $\{project\.build\.directory\}/\.goBuildCache
> fillColor=`#F3F676`


###### \<goCache\>off\</goCache\>

### goRootBootstrap
> fillColor=`#FF9090`


#### Go bootstrap home folder\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### defines

###### $GOROOT\_BOOTSTRAP

### hideBanner
> fillColor=`#FF9090`


#### Allows to hide print of plug\-in banner\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### true
> fillColor=`#F3F676`


###### \<hideBanner\>false\</hideBanner\>

### ignoreErrorExitCode
> fillColor=`#FF9090`


#### false
> fillColor=`#F3F676`


##### \<ignoreErrorExitCode\>true\</ignoreErrorExitCode\>

### keepSdkArchive
> fillColor=`#FF9090`


#### false
> fillColor=`#F3F676`


##### \<keepSdkArchive\>true\</keepSdkArchive\>

### keepUnarchFolderIfError
> fillColor=`#FF9090`


#### false
> fillColor=`#F3F676`


##### \<keepUnarchFolderIfError\>true\</keepUnarchFolderIfError\>

### moduleMode
> fillColor=`#FF9090`


#### Manage processing of Go modules\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### false
> fillColor=`#F3F676`


###### properties

####### mvn\.golang\.module\.mode

### proxy
> fillColor=`#FF9090`


#### host
> fillColor=`#FDB576`


##### 127\.0\.0\.1
> fillColor=`#F3F676`


###### \<host\>192\.68\.23\.12\</host\>

#### protocol
> fillColor=`#FDB576`,leftSide=`true`


##### http
> fillColor=`#F3F676`


###### \<protocol\>https\</protocol\>

#### port
> fillColor=`#FDB576`,leftSide=`true`


##### 80
> fillColor=`#F3F676`


###### \<port\>8080\</protocol\>

#### username
> fillColor=`#FDB576`,leftSide=`true`


##### \<username\>somename\</username\>

#### password
> fillColor=`#FDB576`,leftSide=`true`


##### \<password\>changeme\</password\>

#### nonProxyHosts
> fillColor=`#FDB576`,leftSide=`true`


##### \<nonProxyHosts\>127\.0\.0\.1|localhost\</nonProxyHosts\>

### useMavenProxy
> fillColor=`#FF9090`,leftSide=`true`


#### Allow use of proxy parameters<br/>provided by maven\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### true
> fillColor=`#F3F676`


###### \<useMavenProxy\>false\</useMavenProxy\>

### supposeSdkArchiveFileName
> fillColor=`#FF9090`,leftSide=`true`


#### Suppose SDK archive file name if it is not presented<br/>in the list loaded from server\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### true
> fillColor=`#F3F676`


###### \<supposeSdkArchiveFileName\>false\</supposeSdkArchiveFileName\>

### sdkSite
> fillColor=`#FF9090`


#### Base site for SDK download\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### https://storage\.googleapis\.com/golang/
> fillColor=`#F3F676`


### skip
> fillColor=`#FF9090`,leftSide=`true`


#### Skip execution\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### properties

###### each mojo processes property
> fillColor=`#00B6FF`,mmd.emoticon=`lightbulb`


####### mvn\.golang\.\[MOJO\_NAME\]\.skip
> fillColor=`#F3F676`


######## \<mvn\.golang\.build\.skip\>true\</mvn\.golang\.build\.skip\>

##### false
> fillColor=`#F3F676`


###### \<skip\>true\</skip\>

### reportsFolder
> fillColor=`#FF9090`,leftSide=`true`


#### Folder to place console logs\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### $\{project\.build\.directory\}/reports
> fillColor=`#F3F676`


###### \<reportsFolder\>$\{basedir\}/dir\</reportsFolder\>

### outLogFile
> fillColor=`#FF9090`,leftSide=`true`


#### File to save console out log\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### \<outLogFile\>\</outLogFile\>

### storeFolder
> fillColor=`#FF9090`,leftSide=`true`


#### Folder to be used to save and unpack loaded SDKs<br/> and also keep misc info\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### $\{user\.home\}/\.mvnGoLang
> fillColor=`#F3F676`


###### \<storeFolder\>$\{user\.home\}/\.mvngo\</storeFolder\>

### sources
> fillColor=`#FF9090`


#### Project source folder\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### $\{project\.build\.sourceDirectory\}
> fillColor=`#F3F676`


###### \<sources\>$\{basedir\}/src\</sources\>

### sdkArchiveName
> fillColor=`#FF9090`


#### Allows directly define name of SDK archive\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


### sdkDownloadUrl
> fillColor=`#FF9090`


#### Directly defined URL to download GoSDK\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


### target386
> fillColor=`#FF9090`,leftSide=`true`


#### Value to be provided as $GO386\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### defines

###### $GO386

##### \<target386\>387\</target386\>

### targetArm
> fillColor=`#FF9090`,leftSide=`true`


#### Value to be provided as $GOARM\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### defines

###### $GOARM

##### \<targetArm\>6\</targetArm\>

### targetOs
> fillColor=`#FF9090`,leftSide=`true`


#### Target OS information for $GOOS\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### defines

###### $GOOS

##### \<targetOs\>linux\</targetOs\>

### targetArch
> fillColor=`#FF9090`


#### Target architecture for $GOARCH\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### defines

###### $GOARCH

##### \<targetArch\>linux\</targetArch\>

### os
> fillColor=`#FF9090`,leftSide=`true`


#### Host OS information\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### \<os\>windows\</os\>

### osxVersion
> fillColor=`#FF9090`,leftSide=`true`


#### Data about host OSX version\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### \<osxVersion\>osx10\.8\</osxVersion

### verbose
> fillColor=`#FF9090`,leftSide=`true`


#### Make verbose output, also active if maven in debug\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### false
> fillColor=`#F3F676`


###### \<verbose\>true\</verbose\>

### workingDir
> fillColor=`#FF9090`


#### Path to be used as working directory for executing process\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### \<workingDir\>$\{basedir\}\</workingDir\>

### useGoTool
> fillColor=`#FF9090`,leftSide=`true`


#### Name of tool to be called<br/>instead of standard 'go' tool\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### \<useGoTool\>\</useGoTool\>

### useEnvVars
> fillColor=`#FF9090`,leftSide=`true`


#### Find and use Go environment variables\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


##### false
> fillColor=`#F3F676`


###### \<useEnvVars\>true\</useEnvVars\>

## goals
> fillColor=`#C6C0D6`,leftSide=`true`


### build
> fillColor=`#B772F5`,textColor=`#FFFFFF`


#### resultFolder
> fillColor=`#FF9090`


##### Target folder where to place the result file\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


###### $\{project\.build\.directory\}
> fillColor=`#F3F676`


####### \<resultFolder\>some/folder\</resultFolder\>

#### resultName
> fillColor=`#FF9090`,leftSide=`true`


##### Name of the result file\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


###### $\{project\.build\.finalName\}
> fillColor=`#F3F676`


####### \<resultName\>someName\</resultName\>

#### buildMode
> fillColor=`#FF9090`,leftSide=`true`


##### Build mode indicates which kind of object file is to be built\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


###### default
> fillColor=`#F3F676`


####### \<buildMode\>plugin\</buildMode\>

#### strip
> fillColor=`#FF9090`,leftSide=`true`


##### Strip result file\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


###### false
> fillColor=`#F3F676`


####### \<strip\>true\</strip\>

#### ldFlags
> fillColor=`#FF9090`,leftSide=`true`


##### List of linker flags\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


###### \<ldFlags\><br/>    \<flag\>\-X\</flag\><br/>    \<flag\>"main\.Buildstamp=$\{build\.date\.stamp\}"\</flag\><br/>    \<flag\>\-X\</flag\><br/>    \<flag\>"main\.svnRevision=22543"\</flag\><br/>\</ldFlags\>
> align=`left`


#### dependencies
> fillColor=`#FFCC00`

- TOPIC
<pre>1693D4AFAAFA</pre>

#### packages
> fillColor=`#FFCC00`,leftSide=`true`

- TOPIC
<pre>1693D4A9E73A</pre>

### clean
> fillColor=`#B772F5`,leftSide=`true`,textColor=`#FFFFFF`


#### cleanGoPath
> fillColor=`#FF9090`


##### Clean all folders provided by Go Path\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


###### false
> fillColor=`#F3F676`


####### \<cleanGoPath\>true\</cleanGoPath\>

#### deleteStoreFolder
> fillColor=`#FF9090`,leftSide=`true`


##### Delete plugin Golang store folder\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


###### false
> fillColor=`#F3F676`


####### \<deleteStoreFolder\>true\</deleteStoreFolder\>

#### packages
> fillColor=`#FFCC00`,leftSide=`true`

- TOPIC
<pre>1693D4A9E73A</pre>

#### dependencies
> fillColor=`#FFCC00`

- TOPIC
<pre>1693D4AFAAFA</pre>

### custom
> fillColor=`#B772F5`,leftSide=`true`,textColor=`#FFFFFF`


#### customCommand
> fillColor=`#FF9090`


##### Command for Go tool to be executed
> fillColor=`#92FF00`,mmd.emoticon=`information`


###### \<customCommand\>dist\</customCommand\>

#### dependencies
> fillColor=`#FFCC00`

- TOPIC
<pre>1693D4AFAAFA</pre>

#### packages
> fillColor=`#FFCC00`,leftSide=`true`

- TOPIC
<pre>1693D4A9E73A</pre>

### fix
> fillColor=`#B772F5`,leftSide=`true`,textColor=`#FFFFFF`


#### packages
> fillColor=`#FFCC00`,leftSide=`true`

- TOPIC
<pre>1693D4A9E73A</pre>

#### dependencies
> fillColor=`#FFCC00`

- TOPIC
<pre>1693D4AFAAFA</pre>

### fmt
> fillColor=`#B772F5`,leftSide=`true`,textColor=`#FFFFFF`


#### packages
> fillColor=`#FFCC00`,leftSide=`true`

- TOPIC
<pre>1693D4A9E73A</pre>

#### dependencies
> fillColor=`#FFCC00`

- TOPIC
<pre>1693D4AFAAFA</pre>

### generate
> fillColor=`#B772F5`,leftSide=`true`,textColor=`#FFFFFF`


#### dependencies
> fillColor=`#FFCC00`

- TOPIC
<pre>1693D4AFAAFA</pre>

#### packages
> fillColor=`#FFCC00`

- TOPIC
<pre>1693D4A9E73A</pre>

### get
> fillColor=`#B772F5`,leftSide=`true`,textColor=`#FFFFFF`


#### allowLockSession
> fillColor=`#FF9090`


##### Enable lock maven session during operation<br/>if maven in parallel mode
> fillColor=`#92FF00`,mmd.emoticon=`information`


###### true
> fillColor=`#F3F676`


#### customScript
> fillColor=`#FF9090`


##### Script to be called in the end of all operations over CVS\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


###### path
> fillColor=`#FDB576`


####### \<path\>$\{basedir\}/script\.sh\</path\>

###### options
> fillColor=`#FDB576`


####### \<options\><br/>  \<opt\>arg1\</opt\><br/>  \<opt\>arg2\</opt\><br/>\</options\>
> align=`left`


###### ignoreFail
> fillColor=`#FDB576`


####### \<ignoreFail\>false\</ignoreFail\>

###### environment<br/>variables
> fillColor=`#FDB576`


####### MVNGO\_CVS\_BRANCH

####### MVNGO\_CVS\_TAG
> leftSide=`true`


####### MVNGO\_CVS\_REVISION
> leftSide=`true`


####### MVNGO\_CVS\_PACKAGE
> leftSide=`true`


#### externalPackageFile
> fillColor=`#FF9090`,leftSide=`true`


##### Path to a file contains list of packages\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


###### mvn\.golang\.get\.packages\.file

###### \<externalPackageFile\>$\{basedir\}/packages\.txt\</externalPackageFile\>

#### autofixGitCache
> fillColor=`#FF9090`,leftSide=`true`


##### Try to fix GIT cache error if it is detected\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


###### false
> fillColor=`#F3F676`


####### \<autofixGitCache\>true\</autofixGitCache\>

#### branch
> fillColor=`#FF9090`,leftSide=`true`


##### Branch to be activated\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


###### \<branch\>v1\.2\.3\</branch\>

#### tag
> fillColor=`#FF9090`,leftSide=`true`


##### Tag to be activated\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


###### \<tag\>1\.0\.0\</tag\>

#### revision
> fillColor=`#FF9090`,leftSide=`true`


##### Revision to be activated\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


###### \<revision\>12233445\</revision\>

#### customCvsOptions
> fillColor=`#FF9090`,leftSide=`true`


##### Allows to define custom options for CVS operation\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


###### \<customCvsOptions\>                                <br/>      \<option\>\-\-paginate\</option\>              <br/>      \<option\>\-\-no\-replace\-objects\</option\><br/>\</customCvsOptions\>                               

#### cvsExe
> fillColor=`#FF9090`,leftSide=`true`


##### Custom executable CVS file to be executed for branch,<br/>tag and revision operations\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


###### \<cvsExe\>somecvs\.exe\</cvsExe\>

#### enforceDeletePackageFiles
> fillColor=`#FF9090`,leftSide=`true`


##### Search sources for package and its compiled version,<br/>enforce delete of found source folder and compiled '\.a' file\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


###### false
> fillColor=`#F3F676`


####### \<enforceDeletePackageFiles\>true\</enforceDeletePackageFiles\>

#### deleteCommonPkg
> fillColor=`#FF9090`,leftSide=`true`


##### Delete whole common pkg folder at $GOPATH/pkg\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


###### false
> fillColor=`#F3F676`


####### \<deleteCommonPkg\>true\</deleteCommonPkg\>

#### relativePathToCvsFolder
> fillColor=`#FF9090`,leftSide=`true`


##### Allows directly define relative path <br/>to the package containing CVS data<br/>inside 'src' folder for package
> fillColor=`#92FF00`,mmd.emoticon=`information`


#### disableCvsAutosearch
> fillColor=`#FF9090`,leftSide=`true`


##### Disable auto\-search for CVS folder in package folder hierarchy\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


###### false
> fillColor=`#F3F676`


####### \<disableCvsAutosearch\>true\</disableCvsAutosearch\>

#### dependencies
> fillColor=`#FFCC00`

- TOPIC
<pre>1693D4AFAAFA</pre>

#### packages
> fillColor=`#FFCC00`

- TOPIC
<pre>1693D4A9E73A</pre>

### install
> fillColor=`#B772F5`,leftSide=`true`,textColor=`#FFFFFF`


#### skip
> fillColor=`#FF9090`


##### Skip step execution\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


###### maven\.deploy\.skip

####### false
> fillColor=`#F3F676`


######## \<skip\>true\</skip\>

#### dependencies
> fillColor=`#FFCC00`

- TOPIC
<pre>1693D4AFAAFA</pre>

#### packages
> fillColor=`#FFCC00`

- TOPIC
<pre>1693D4A9E73A</pre>

### jfrog\-cli
> fillColor=`#B772F5`,leftSide=`true`,textColor=`#FFFFFF`


#### cliPath
> fillColor=`#FF9090`


##### Path to a JFrog CLI executable file\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


###### \<cliPath\>$\{basedir\}/jfrog\</cliPath\>

#### target
> fillColor=`#FF9090`,leftSide=`true`


##### The product on which you wish to execute the command
> fillColor=`#92FF00`,mmd.emoticon=`information`


###### rt
> fillColor=`#F3F676`


####### \<target\>rt\</target\>

#### command
> fillColor=`#FF9090`,leftSide=`true`


##### The command to execute\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


###### go
> fillColor=`#F3F676`


####### \<command\>go\</command\>

#### arguments
> fillColor=`#FF9090`,leftSide=`true`


##### Set of arguments corresponding to the command\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


###### \<arguments\>    <br/>    \<arg\>\</arg\><br/>    \<arg\>\</arg\><br/>\</arguments\>   

#### dependencies
> fillColor=`#FFCC00`

- TOPIC
<pre>1693D4AFAAFA</pre>

### mod
> fillColor=`#00B6FF`,leftSide=`true`,textColor=`#FFFFFF`


#### command
> fillColor=`#FF9090`


##### Command to be executed
> fillColor=`#92FF00`,mmd.emoticon=`information`


###### \<command\>init\</command\>

#### arguments
> fillColor=`#FF9090`,leftSide=`true`


##### Optional command arguments
> fillColor=`#92FF00`,mmd.emoticon=`information`


###### \<arguments\><br/>   \<arg\>example\.com/hello\</arg\><br/>\</arguments\>
> align=`left`


#### dependencies
> fillColor=`#FFCC00`,leftSide=`true`

- TOPIC
<pre>1693D4AFAAFA</pre>

### mvninstall
> fillColor=`#B772F5`,leftSide=`true`,textColor=`#FFFFFF`


#### compression
> fillColor=`#FF9090`


##### Compression level of zip file\. Must be 1\.\.9
> fillColor=`#92FF00`,mmd.emoticon=`information`


###### 9
> fillColor=`#F3F676`


####### \<compression\>5\</compression\>

#### dependencies
> fillColor=`#FFCC00`

- TOPIC
<pre>1693D4AFAAFA</pre>

### run
> fillColor=`#B772F5`,leftSide=`true`,textColor=`#FFFFFF`


#### xprog
> fillColor=`#FF9090`


##### If value is provided then \-exec will be used with the value\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


#### args
> fillColor=`#FF9090`,leftSide=`true`


##### Command arguments\. They follow package names in command line\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


#### dependencies
> fillColor=`#FFCC00`

- TOPIC
<pre>1693D4AFAAFA</pre>

#### packages
> fillColor=`#FFCC00`

- TOPIC
<pre>1693D4A9E73A</pre>

### test
> fillColor=`#B772F5`,leftSide=`true`,textColor=`#FFFFFF`


#### testFlags
> fillColor=`#FF9090`


##### List of test binary flags\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


#### skip
> fillColor=`#FF9090`,leftSide=`true`


##### Skip the step\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


###### properties

####### maven\.test\.skip

####### skipTests

###### false
> fillColor=`#F3F676`


####### \<skip\>true\</skip\>

#### dependencies
> fillColor=`#FFCC00`

- TOPIC
<pre>1693D4AFAAFA</pre>

#### packages
> fillColor=`#FFCC00`

- TOPIC
<pre>1693D4A9E73A</pre>

### tool
> fillColor=`#B772F5`,leftSide=`true`,textColor=`#FFFFFF`


#### command
> fillColor=`#FF9090`


##### Command to be executed\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


#### args
> fillColor=`#FF9090`,leftSide=`true`


##### Command arguments\.
> fillColor=`#92FF00`,mmd.emoticon=`information`


#### dependencies
> fillColor=`#FFCC00`

- TOPIC
<pre>1693D4AFAAFA</pre>

### vet
> fillColor=`#B772F5`,leftSide=`true`,textColor=`#FFFFFF`


#### packages
> fillColor=`#FFCC00`

- TOPIC
<pre>1693D4A9E73A</pre>

#### dependencies
> fillColor=`#FFCC00`

- TOPIC
<pre>1693D4AFAAFA</pre>
